<?php

pload('packfire.net.http.pHttpClient');

/**
 * Test class for pHttpClient.
 * Generated by PHPUnit on 2012-09-17 at 08:03:54.
 */
class pHttpClientTest extends PHPUnit_Framework_TestCase {

    /**
     * @var pHttpClient
     */
    protected $object;
    
    const IP = '192.168.1.2';
    
    const UA = 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.29 Safari/525.13';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new pHttpClient(self::IP, self::UA);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers pHttpClient::knownBots
     */
    public function testKnownBots() {
        $this->assertInternalType('array', pHttpClient::knownBots());
        $this->assertContains('googlebot', pHttpClient::knownBots());
    }

    /**
     * @covers pHttpClient::browserName
     */
    public function testBrowserName() {
        $this->assertEquals(pHttpClientBrowser::CHROME, $this->object->browserName());
    }

    /**
     * @covers pHttpClient::browserVersion
     */
    public function testBrowserVersion() {
        $this->assertEquals('0.2.149.29', $this->object->browserVersion());
    }

    /**
     * @covers pHttpClient::operatingSystem
     */
    public function testOperatingSystem() {
        $this->assertEquals(pHttpClientOS::WINDOWS, $this->object->operatingSystem());
    }

    /**
     * @covers pHttpClient::userAgent
     */
    public function testUserAgent() {
        $this->assertEquals(self::UA, $this->object->userAgent());
    }

    /**
     * @covers pHttpClient::ipAddress
     */
    public function testIpAddress() {
        $this->assertEquals(self::IP, $this->object->ipAddress());
    }

    /**
     * @covers pHttpClient::bot
     */
    public function testBot() {
        $this->assertFalse($this->object->bot());
    }

}
