<?php

pload('packfire.yaml.pYamlValue');

/**
 * Test class for pYamlValue.
 * Generated by PHPUnit on 2012-07-12 at 11:56:35.
 */
class pYamlValueTest extends PHPUnit_Framework_TestCase {
    
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers pYamlValue::stripComment
     */
    public function testStripComment() {
        $text = 'message great # maybe this will work?';
        $this->assertEquals('message great ', pYamlValue::stripComment($text));
    }
    
    /**
     * @covers pYamlValue::stripComment
     */
    public function testStripComment2() {
        $text = '"message great # maybe this will work?"';
        $this->assertEquals('"message great # maybe this will work?"', pYamlValue::stripComment($text));
    }
    
    /**
     * @covers pYamlValue::stripComment
     */
    public function testStripComment3() {
        $text = '# "message great maybe this will work?"';
        $this->assertEquals('', pYamlValue::stripComment($text));
    }

    /**
     * @covers pYamlValue::isQuoted
     */
    public function testIsQuoted() {
        $text = '# "message great maybe this will work?"';
        $this->assertFalse(pYamlValue::isQuoted($text));
    }

    /**
     * @covers pYamlValue::isQuoted
     */
    public function testIsQuoted2() {
        $text = '"message great maybe this will work?"';
        $this->assertTrue(pYamlValue::isQuoted($text));
    }

    /**
     * @covers pYamlValue::isQuoted
     */
    public function testIsQuoted3() {
        $text = '\'message great maybe this will work?"';
        $this->assertFalse(pYamlValue::isQuoted($text));
    }

    /**
     * @covers pYamlValue::isQuoted
     */
    public function testIsQuoted4() {
        $text = '\'message great maybe this will work?\'';
        $this->assertTrue(pYamlValue::isQuoted($text));
    }

    /**
     * @covers pYamlValue::stripQuote
     */
    public function testStripQuote() {
        $text = '"message great # maybe this will work?"';
        $this->assertEquals('message great # maybe this will work?', pYamlValue::stripQuote($text));
    }

    /**
     * @covers pYamlValue::stripQuote
     */
    public function testStripQuote2() {
        $text = '\'message great # maybe this will work?\'';
        $this->assertEquals('message great # maybe this will work?', pYamlValue::stripQuote($text));
    }

    /**
     * @covers pYamlValue::stripQuote
     */
    public function testStripQuote3() {
        $text = '\'message great # maybe this will work?"';
        $this->assertEquals('\'message great # maybe this will work?"', pYamlValue::stripQuote($text));
    }

    /**
     * @covers pYamlValue::translateScalar
     */
    public function testTranslateScalar() {
        $this->assertEquals(true, pYamlValue::translateScalar('true'));
        $this->assertEquals(false, pYamlValue::translateScalar('false'));
        $this->assertEquals(null, pYamlValue::translateScalar('null'));
        $this->assertEquals('n"ull', pYamlValue::translateScalar('"n\\"ull"'));
        $this->assertEquals('n\'ull', pYamlValue::translateScalar('\'n\\\'ull\''));
        $this->assertEquals("test\n", pYamlValue::translateScalar('test\n'));
        $this->assertEquals("test\n", pYamlValue::translateScalar('"test\n"'));
        $this->assertEquals('test\\n', pYamlValue::translateScalar('\'test\n\''));
    }

    /**
     * @covers pYamlValue::unescape
     */
    public function testUnescape() {
        $this->assertEquals("test\n\t\r\0", pYamlValue::unescape('test\n\t\r\0'));
    }

}